# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: false
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildBinaries:
    name: Build and release binaries
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set-build-number.outputs.new_version }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: beta

      - name: Set build number
        id: set-build-number
        run: |
          bash ${GITHUB_WORKSPACE}/Utility/set_build_number.sh ${{ vars.BUILD_NUMBER }}

      - name: Update repo variable
        run: |
          bash ${GITHUB_WORKSPACE}/Utility/update_build_number_variable.sh ${{ secrets.API_TOKEN }} ${{ github.repository }} ${{ env.NEW_BUILD }}

      - name: Build webUI
        run: |
          tsc -p ./web/tsconfig.json
          python ./Utility/create_webUI.py

      - name: Upload webUI as artifact
        uses: actions/upload-artifact@v4
        with:
          name: webUI-artifact
          path: ./src/webUI.go

      - name: Set up and Build
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
        id: go

      - name: Build binaries
        run: |
          go mod tidy && go mod vendor
          bash ${GITHUB_WORKSPACE}/Utility/create_binaries.sh beta

      - name: Create a Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          name: v${{ env.NEW_VERSION }} (Beta)
          tag_name: v${{ env.NEW_VERSION }}-beta
          files: dist/*
  
  buildDockerImages:
    name: Build and push Docker images
    runs-on: ubuntu-latest
    needs: buildBinaries
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set NEW_VERSION
        run: echo "NEW_VERSION=${{ needs.buildBinaries.outputs.new_version }}" >> $GITHUB_ENV
        shell: bash
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            BRANCH=beta
          push: true
          no-cache: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v8
          tags: |
            mgoerentz/threadfin:latest-beta
            mgoerentz/threadfin:v${{ env.NEW_VERSION }}-beta
